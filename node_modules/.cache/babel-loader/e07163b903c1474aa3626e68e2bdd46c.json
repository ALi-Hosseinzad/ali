{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/Toolbar.jsx\";\nimport React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\nimport styled from \"styled-components\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst ToolBar = props => {\n  const classes = useStyles();\n  const [key, setkey] = useState(0);\n  const className = isActive ? 'active' : '';\n\n  const isActive = id => {\n    return key === id;\n  };\n\n  const handleActive = key => {\n    setkey(key);\n  };\n\n  const CustomTab = ({\n    children\n  }) => /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, children));\n\n  CustomTab.tabsRole = 'Tab';\n\n  const CustomTabPanel = ({\n    children,\n    myCustomProp,\n    ...otherProps\n  }) => /*#__PURE__*/React.createElement(TabPanel, Object.assign({}, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, children), myCustomProp && `myCustomProp: ${myCustomProp}`);\n\n  CustomTabPanel.tabsRole = 'TabPanel';\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, Object.values(ToolbarData[list]).map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        key: i,\n        isActive: isActive(item.id),\n        onActiveTab: () => handleActive(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TabList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomTab, {\n        className: className,\n        isActive: props.isActive,\n        onClick: props.onActiveTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, \" \", item.name))), /*#__PURE__*/React.createElement(CustomTabPanel, {\n        children: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }\n};\n\nexport default ToolBar;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/Toolbar.jsx"],"names":["React","useState","ToolbarData","makeStyles","Tabs","Tab","TabList","TabPanel","styled","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","ToolBar","props","classes","key","setkey","className","isActive","id","handleActive","CustomTab","children","tabsRole","CustomTabPanel","myCustomProp","otherProps","url","window","location","href","split","pop","vals","Object","keys","i","length","list","values","map","item","onActiveTab","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Tabs,Tab,TabList,TabPanel} from \"react-tabs\";\nimport styled from \"styled-components\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst ToolBar = (props) => {\n  const classes = useStyles();\n  const [key,setkey] =useState(0)\n  const className = isActive ? 'active' : '';\n  const isActive = (id) => {\n    return key === id;\n  };\n  const handleActive = (key) => {\n    setkey(key);\n  };\n  const CustomTab = ({ children }) => (\n    <Tab>\n      <div>{children}</div>\n    </Tab>\n  );\n   \n  CustomTab.tabsRole = 'Tab';\n   const CustomTabPanel = ({ children, myCustomProp, ...otherProps }) => (\n    <TabPanel {...otherProps}>\n      <div>{children}</div>\n      {myCustomProp && `myCustomProp: ${myCustomProp}`}\n    </TabPanel>\n  )\n   \n  CustomTabPanel.tabsRole = 'TabPanel'\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return (\n        <div className=\"toolbar\">\n          {Object.values(ToolbarData[list]).map((item,i) => (\n            <div className={classes.root}>\n              <Tabs\n                key={i}\n                isActive={isActive(item.id)}\n                onActiveTab={() => handleActive(item.id)}\n              >\n                <TabList>\n                  <CustomTab className={className} isActive={props.isActive} onClick={props.onActiveTab}> {item.name}</CustomTab>\n                </TabList>\n              </Tabs>\n              <CustomTabPanel children={item.name} />\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n};\nexport default ToolBar;\n"]},"metadata":{},"sourceType":"module"}