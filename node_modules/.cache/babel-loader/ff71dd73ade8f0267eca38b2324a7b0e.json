{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/Toolbar.jsx\";\nimport React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\nimport styled from \"styled-components\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst ToolBar = props => {\n  const classes = useStyles();\n  const [key, setkey] = useState(0);\n\n  const isActive = id => {\n    return key === id;\n  };\n\n  const handleActive = key => {\n    setkey(key);\n  };\n\n  const Tab = props => {\n    return /*#__PURE__*/React.createElement(StyledLi, {\n      isActive: props.isActive,\n      onClick: props.onActiveTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, props.content));\n  };\n\n  const StyledLi = styled.li`\n  font-weight: ${({\n    isActive\n  }) => isActive ? 600 : 100};\n  cursor: pointer;\n  font-family: Helvetica;\n  transition: 200ms all linear;\n`;\n\n  const CustomTabPanel = ({\n    children,\n    myCustomProp,\n    ...otherProps\n  }) => /*#__PURE__*/React.createElement(TabPanel, Object.assign({}, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, children), myCustomProp && `myCustomProp: ${myCustomProp}`);\n\n  CustomTabPanel.tabsRole = 'TabPanel';\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, Object.values(ToolbarData[list]).map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        key: i,\n        isActivet: isActive(item.id),\n        onActiveTab: () => props.handleActive(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TabList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        className: item.class,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, item.name))), /*#__PURE__*/React.createElement(CustomTabPanel, {\n        children: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }\n};\n\nexport default ToolBar;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/Toolbar.jsx"],"names":["React","useState","ToolbarData","makeStyles","Tabs","Tab","TabList","TabPanel","styled","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","ToolBar","props","classes","key","setkey","isActive","id","handleActive","onActiveTab","content","StyledLi","li","CustomTabPanel","children","myCustomProp","otherProps","tabsRole","url","window","location","href","split","pop","vals","Object","keys","i","length","list","values","map","item","class","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Tabs,Tab,TabList,TabPanel} from \"react-tabs\";\nimport styled from \"styled-components\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst ToolBar = (props) => {\n  const classes = useStyles();\n  const [key,setkey] =useState(0)\n\n  const isActive = (id) => {\n    return key === id;\n  };\n  const handleActive = (key) => {\n    setkey(key);\n  };\n  const Tab = props => {\n    return (\n      <StyledLi isActive={props.isActive} onClick={props.onActiveTab}>\n        <p>{props.content}</p>\n      </StyledLi>\n    );\n  };\n  const StyledLi = styled.li`\n  font-weight: ${({ isActive }) => (isActive ? 600 : 100)};\n  cursor: pointer;\n  font-family: Helvetica;\n  transition: 200ms all linear;\n`;\n  const CustomTabPanel = ({ children, myCustomProp, ...otherProps }) => (\n    <TabPanel {...otherProps}>\n      <div>{children}</div>\n      {myCustomProp && `myCustomProp: ${myCustomProp}`}\n    </TabPanel>\n  )\n   \n  CustomTabPanel.tabsRole = 'TabPanel'\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return (\n        <div className=\"toolbar\">\n          {Object.values(ToolbarData[list]).map((item,i) => (\n            <div className={classes.root}>\n              <Tabs\n                key={i}\n                isActivet={isActive(item.id)}\n                onActiveTab={() => props.handleActive(item.id)}\n              >\n                <TabList>\n                  <Tab className={item.class}>{item.name}</Tab>\n                </TabList>\n              </Tabs>\n              <CustomTabPanel children={item.name} />\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n};\nexport default ToolBar;\n"]},"metadata":{},"sourceType":"module"}