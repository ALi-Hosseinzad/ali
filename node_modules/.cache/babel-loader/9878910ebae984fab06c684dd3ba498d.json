{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx\";\nimport React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { compose, withState, withHandlers } from 'recompose';\nimport styled from 'styled-components';\nconst enchancer = compose(withState('selectedTabId', 'setSelectedTabId', 1), withHandlers({\n  isActive: props => id => {\n    return props.selectedTabId === id;\n  },\n  setActiveTab: props => id => {\n    props.setSelectedTabId(id);\n  }\n}));\nconst Tabs = enchancer(props => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, props.data.map((el, i) => {\n    return /*#__PURE__*/React.createElement(Tab, {\n      key: i,\n      content: el.name,\n      isActive: props.isActive(el.id),\n      onActiveTab: () => props.setActiveTab(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    });\n  }));\n});\n\nconst Tab = props => {\n  return /*#__PURE__*/React.createElement(StyledLi, {\n    isActive: props.isActive,\n    onClick: props.onActiveTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, props.content));\n};\n\nconst StyledLi = styled.li`\n  font-weight: ${({\n  isActive\n}) => isActive ? 600 : 100};\n  cursor: pointer;\n  font-family: ;\n  transition: 200ms all linear;\n`;\n\nconst ResponsiveNavbarView = () => {\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        data: Object.values(ToolbarData[list]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n};\n\nexport default ResponsiveNavbarView;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx"],"names":["React","useState","ToolbarData","compose","withState","withHandlers","styled","enchancer","isActive","props","id","selectedTabId","setActiveTab","setSelectedTabId","Tabs","data","map","el","i","name","Tab","onActiveTab","content","StyledLi","li","ResponsiveNavbarView","url","window","location","href","split","pop","vals","Object","keys","length","list","values"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,QAAiD,WAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGJ,OAAO,CACxBC,SAAS,CAAC,eAAD,EAAkB,kBAAlB,EAAsC,CAAtC,CADe,EAExBC,YAAY,CAAC;AACZG,EAAAA,QAAQ,EAAEC,KAAK,IAAIC,EAAE,IAAI;AACxB,WAAOD,KAAK,CAACE,aAAN,KAAwBD,EAA/B;AACA,GAHW;AAIZE,EAAAA,YAAY,EAAEH,KAAK,IAAIC,EAAE,IAAI;AAC5BD,IAAAA,KAAK,CAACI,gBAAN,CAAuBH,EAAvB;AACA;AANW,CAAD,CAFY,CAAzB;AAWA,MAAMI,IAAI,GAAGP,SAAS,CAACE,KAAK,IAAI;AAC/B,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KAAK,CAACM,IAAN,CAAWC,GAAX,CAAe,CAACC,EAAD,EAAKC,CAAL,KAAW;AAC1B,wBACC,oBAAC,GAAD;AACC,MAAA,GAAG,EAAEA,CADN;AAEC,MAAA,OAAO,EAAED,EAAE,CAACE,IAFb;AAGC,MAAA,QAAQ,EAAEV,KAAK,CAACD,QAAN,CAAeS,EAAE,CAACP,EAAlB,CAHX;AAIC,MAAA,WAAW,EAAE,MAAMD,KAAK,CAACG,YAAN,CAAmBK,EAAE,CAACP,EAAtB,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAQA,GATA,CADF,CADD;AAcA,CAfqB,CAAtB;;AAgBA,MAAMU,GAAG,GAAGX,KAAK,IAAI;AACpB,sBACC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,KAAK,CAACD,QAA1B;AAAoC,IAAA,OAAO,EAAEC,KAAK,CAACY,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,KAAK,CAACa,OAAV,CADD,CADD;AAKA,CAND;;AAQA,MAAMC,QAAQ,GAAGjB,MAAM,CAACkB,EAAG;iBACV,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,GAAH,GAAS,GAAK;;;;CAD1D;;AAMA,MAAMiB,oBAAoB,GAAG,MAAM;AACjC,QAAMC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,EAAZ;AACA,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYhC,WAAZ,CAAb;;AACA,OAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,IAAI,CAACG,MAAzB,EAAiCjB,CAAC,EAAlC,EAAsC;AACpC,QAAIc,IAAI,CAACd,CAAD,CAAJ,KAAYQ,GAAhB,EAAqB;AACnB,YAAMU,IAAI,GAAGJ,IAAI,CAACd,CAAD,CAAjB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAIe,MAAM,CAACI,MAAP,CAAcnC,WAAW,CAACkC,IAAD,CAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;AACF;AACF,CAbD;;AAcA,eAAgBX,oBAAhB","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { compose, withState, withHandlers } from 'recompose'\nimport styled from 'styled-components'\n\nconst enchancer = compose(\n\twithState('selectedTabId', 'setSelectedTabId', 1),\n\twithHandlers({\n\t\tisActive: props => id => {\n\t\t\treturn props.selectedTabId === id\n\t\t},\n\t\tsetActiveTab: props => id => {\n\t\t\tprops.setSelectedTabId(id)\n\t\t},\n\t})\n)\nconst Tabs = enchancer(props => {\n\treturn (\n\t\t<ul>\n\t\t\t{props.data.map((el, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tcontent={el.name}\n\t\t\t\t\t\tisActive={props.isActive(el.id)}\n\t\t\t\t\t\tonActiveTab={() => props.setActiveTab(el.id)}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t)\n})\nconst Tab = props => {\n\treturn (\n\t\t<StyledLi isActive={props.isActive} onClick={props.onActiveTab}>\n\t\t\t<p>{props.content}</p>\n\t\t</StyledLi>\n\t)\n}\n\nconst StyledLi = styled.li`\n  font-weight: ${({ isActive }) => (isActive ? 600 : 100)};\n  cursor: pointer;\n  font-family: ;\n  transition: 200ms all linear;\n`\nconst ResponsiveNavbarView = () => { \n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return (\n        <div className=\"toolbar\">\n          <Tabs data = {Object.values(ToolbarData[list])} />\n        </div>\n      );\n    }\n  }\n};\nexport default  ResponsiveNavbarView;\n"]},"metadata":{},"sourceType":"module"}