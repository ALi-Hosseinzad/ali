{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/Toolbar.jsx\";\nimport React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\"; //import styled from \"styled-components\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst ToolBar = props => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const isActive = id => {\n    return value === id;\n  };\n\n  const handleActive = props => key => {\n    setValue(key);\n  };\n\n  const CustomTab = ({\n    children\n  }) => /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, children));\n\n  const className = isActive ? \"active\" : \"\";\n  CustomTab.tabsRole = \"Tab\";\n\n  const CustomTabPanel = ({\n    children,\n    myCustomProp,\n    ...otherProps\n  }) => /*#__PURE__*/React.createElement(TabPanel, Object.assign({}, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, children), myCustomProp && `myCustomProp: ${myCustomProp}`);\n\n  CustomTabPanel.tabsRole = \"TabPanel\";\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, Object.values(ToolbarData[list]).map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        key: i,\n        isActive: isActive(item.id),\n        onActiveTab: () => handleActive(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TabList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomTab, {\n        className: className,\n        isActive: props.isActive,\n        onClick: props.onActiveTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \" \", item.name))), /*#__PURE__*/React.createElement(CustomTabPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, item.name))));\n    }\n  }\n};\n\nexport default ToolBar;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/Toolbar.jsx"],"names":["React","useState","ToolbarData","makeStyles","Tabs","Tab","TabList","TabPanel","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","ToolBar","props","classes","value","setValue","isActive","id","handleActive","key","CustomTab","children","className","tabsRole","CustomTabPanel","myCustomProp","otherProps","url","window","location","href","split","pop","vals","Object","keys","i","length","list","values","map","item","onActiveTab","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\n//import styled from \"styled-components\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst ToolBar = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const isActive = (id) => {\n    return value === id;\n  };\n  \n  const handleActive = props => key => {\n    setValue(key);\n  };\n  const CustomTab = ({ children }) => (\n    <Tab>\n      <div>{children}</div>\n    </Tab>\n  );\n  const className = isActive ? \"active\" : \"\";\n  CustomTab.tabsRole = \"Tab\";\n  const CustomTabPanel = ({ children, myCustomProp, ...otherProps }) => (\n    <TabPanel {...otherProps}>\n      <div>{children}</div>\n      {myCustomProp && `myCustomProp: ${myCustomProp}`}\n    </TabPanel>\n  );\n\n  CustomTabPanel.tabsRole = \"TabPanel\";\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return (\n        <div className=\"toolbar\">\n          {Object.values(ToolbarData[list]).map((item, i) => (\n            <div className={classes.root}>\n              <Tabs\n                key={i}\n                isActive={isActive(item.id)}\n                onActiveTab={() => handleActive(item.id)}\n              >\n                <TabList>\n                  <CustomTab\n                    className={className}\n                    isActive={props.isActive}\n                    onClick={props.onActiveTab}\n                  >\n                    {\" \"}\n                    {item.name}\n                  </CustomTab>\n                </TabList>\n              </Tabs>\n              <CustomTabPanel>{item.name}</CustomTabPanel>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n};\nexport default ToolBar;\n"]},"metadata":{},"sourceType":"module"}