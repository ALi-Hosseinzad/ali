{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx\";\nimport React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { compose, withState, withHandlers } from \"recompose\";\nimport styled from \"styled-components\";\nimport { TabPanel } from \"react-tabs\";\nimport ChangePanel from \"./changePanel\";\nconst enchancer = compose(withState(\"selectedTabId\", \"setSelectedTabId\", 1), withHandlers({\n  isActive: props => id => {\n    return props.selectedTabId === id;\n  },\n  setActiveTab: props => id => {\n    props.setSelectedTabId(id);\n  }\n}));\nconst Tabs = enchancer(props => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"toolbarItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.data.map((el, i) => {\n    return /*#__PURE__*/React.createElement(Tab, {\n      key: i,\n      content: el.name,\n      isActive: props.isActive(el.id),\n      onActiveTab: () => props.setActiveTab(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    });\n  }));\n});\n\nconst Tab = props => {\n  return /*#__PURE__*/React.createElement(StyledLi, {\n    className: \"toolbarItem\",\n    isActive: props.isActive,\n    onClick: props.onActiveTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, props.content));\n};\n\nconst Panel = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.data.map((el, i) => {\n    return /*#__PURE__*/React.createElement(PanelPanel, {\n      key: i,\n      content: el.name,\n      isActive: props.isActive,\n      onActiveTab: () => props.setActiveTab(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nconst PanelItems = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    isActive: props.isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }, props.content);\n};\n\nconst StyledLi = styled.li`\n  font-weight: ${({\n  isActive\n}) => isActive ? 600 : 100};\n  border-bottom: ${({\n  isActive\n}) => isActive ? \"solid 2px green\" : null};\n  cursor: pointer;\n  font-family: BYekan;\n  transition: 20ms all linear;\n`;\n\nconst ResponsiveNavbarView = () => {\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        data: Object.values(ToolbarData[list]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Panel, {\n        data: Object.values(ToolbarData[list]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n};\n\nexport default ResponsiveNavbarView;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx"],"names":["React","useState","ToolbarData","compose","withState","withHandlers","styled","TabPanel","ChangePanel","enchancer","isActive","props","id","selectedTabId","setActiveTab","setSelectedTabId","Tabs","data","map","el","i","name","Tab","onActiveTab","content","Panel","PanelItems","StyledLi","li","ResponsiveNavbarView","url","window","location","href","split","pop","vals","Object","keys","length","list","values"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\nimport { compose, withState, withHandlers } from \"recompose\";\nimport styled from \"styled-components\";\nimport { TabPanel } from \"react-tabs\";\nimport ChangePanel from \"./changePanel\";\n\nconst enchancer = compose(\n  withState(\"selectedTabId\", \"setSelectedTabId\", 1),\n  withHandlers({\n    isActive: (props) => (id) => {\n      return props.selectedTabId === id;\n    },\n    setActiveTab: (props) => (id) => {\n      props.setSelectedTabId(id);\n    },\n  })\n);\nconst Tabs = enchancer((props) => {\n  return (\n    <ul className=\"toolbarItems\">\n      {props.data.map((el, i) => {\n        return (\n          <Tab\n            key={i}\n            content={el.name}\n            isActive={props.isActive(el.id)}\n            onActiveTab={() => props.setActiveTab(el.id)}\n          />\n        );\n      })}\n    </ul>\n  );\n});\nconst Tab = (props) => {\n  return (\n    <StyledLi\n      className=\"toolbarItem\"\n      isActive={props.isActive}\n      onClick={props.onActiveTab}\n    >\n      <p>{props.content}</p>\n    </StyledLi>\n  );\n};\nconst Panel = (props) => {\n  return (\n    <div className=\"tabPanel\">\n      {props.data.map((el, i) => {\n        return (\n          <PanelPanel\n            key={i}\n            content={el.name}\n            isActive={props.isActive}\n            onActiveTab={() => props.setActiveTab(el.id)}\n          />\n        );\n      })}\n    </div>\n  );\n};\nconst PanelItems = (props) => {\n  return <div isActive={props.isActive}>{props.content}</div>;\n};\nconst StyledLi = styled.li`\n  font-weight: ${({ isActive }) => (isActive ? 600 : 100)};\n  border-bottom: ${({ isActive }) => (isActive ? \"solid 2px green\" : null)};\n  cursor: pointer;\n  font-family: BYekan;\n  transition: 20ms all linear;\n`;\nconst ResponsiveNavbarView = () => {\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return (\n        <div className=\"toolbar\">\n          <Tabs data={Object.values(ToolbarData[list])} />\n          <Panel data={Object.values(ToolbarData[list])} />\n        </div>\n      );\n    }\n  }\n};\nexport default ResponsiveNavbarView;\n"]},"metadata":{},"sourceType":"module"}