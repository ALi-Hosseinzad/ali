{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport ToolbarData from \"./toolbar.json\";\nimport ResponsiveNavbar from \"@opuscapita/react-responsive-navbar\";\n\nconst items = () => {\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      const item = Object.values(ToolbarData[list]);\n      console.log(item);\n      return item;\n    }\n  }\n};\n\nconst ResponsiveNavbarView = props => {\n  const [value, setValue] = useState(0);\n\n  const isActive = props => id => {\n    return value === id;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, Object.values(items).map((item, i) => /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    active: isActive(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, item.name)))));\n};\n\nexport default ResponsiveNavbarView;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx"],"names":["React","useState","ReactDOM","withRouter","ToolbarData","ResponsiveNavbar","items","url","window","location","href","split","pop","vals","Object","keys","i","length","list","item","values","console","log","ResponsiveNavbarView","props","value","setValue","isActive","id","map","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,EAAZ;AACA,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYX,WAAZ,CAAb;;AACA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIH,IAAI,CAACG,CAAD,CAAJ,KAAYT,GAAhB,EAAqB;AACnB,YAAMW,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAjB;AACA,YAAMG,IAAI,GAAGL,MAAM,CAACM,MAAP,CAAchB,WAAW,CAACc,IAAD,CAAzB,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAOA,IAAP;AACD;AACF;AACF,CAXD;;AAYA,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAM0B,QAAQ,GAAIH,KAAD,IAAYI,EAAD,IAAQ;AAClC,WAAOH,KAAK,KAAKG,EAAjB;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,MAAM,CAACM,MAAP,CAAcd,KAAd,EAAqBuB,GAArB,CAAyB,CAACV,IAAD,EAAOH,CAAP,kBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,MAAM,EAAEW,QAAQ,CAACR,IAAI,CAACS,EAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAET,IAAI,CAACT,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBS,IAAI,CAACW,IAA1B,CADF,CADF,CADD,CADH,CADF;AAWD,CAhBD;;AAiBA,eAAeP,oBAAf","sourcesContent":["import React ,{useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport ToolbarData from \"./toolbar.json\";\nimport ResponsiveNavbar from \"@opuscapita/react-responsive-navbar\";\n\nconst items = () => {\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      const item = Object.values(ToolbarData[list]);\n      console.log(item);\n      return item;\n    }\n  }\n};\nconst ResponsiveNavbarView = (props) => {\n  const [value, setValue] = useState(0);\n  const isActive = (props) => (id) => {\n    return value === id;\n  };\n  return (\n    <div className=\"toolbar\">\n      {Object.values(items).map((item, i) => (\n        <ul>\n          <li key={i} active={isActive(item.id)}>\n            <a href={item.href}>{item.name}</a>\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\nexport default ResponsiveNavbarView;\n"]},"metadata":{},"sourceType":"module"}