{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx\";\nimport React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\n\nconst ResponsiveNavbarView = props => {\n  const [value, setValue] = useState(0);\n\n  const isActive = props => id => {\n    return value === id;\n  };\n\n  const classActive = (id, key) => {\n    if (id === 0 || id === key) {\n      return \"active\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, Object.values(ToolbarData[list]).map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbarItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        active: isActive(item.id),\n        className: classActive(item.id, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, item.name)))));\n    }\n  }\n};\n\nexport default ResponsiveNavbarView;","map":{"version":3,"sources":["/home/alihz/Desktop/react/my-app2/src/componets/toolbar/newtool.jsx"],"names":["React","useState","ToolbarData","ResponsiveNavbarView","props","value","setValue","isActive","id","classActive","key","url","window","location","href","split","pop","vals","Object","keys","i","length","list","values","map","item","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMM,QAAQ,GAAIH,KAAD,IAAYI,EAAD,IAAQ;AAClC,WAAOH,KAAK,KAAKG,EAAjB;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG,CAACD,EAAD,EAAKE,GAAL,KAAW;AAC7B,QAAIF,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAKE,GAAvB,EAA2B;AACvB,aAAO,QAAP;AACH,KAFD,MAGI;AACA,aAAO,EAAP;AACH;AACF,GAPD;;AAQA,QAAMC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,EAAZ;AACA,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYjB,WAAZ,CAAb;;AACA,OAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIH,IAAI,CAACG,CAAD,CAAJ,KAAYT,GAAhB,EAAqB;AACnB,YAAMW,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAjB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,MAAM,CAACK,MAAP,CAAcrB,WAAW,CAACoB,IAAD,CAAzB,EAAiCE,GAAjC,CAAqC,CAACC,IAAD,EAAOL,CAAP,kBACpC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAY,QAAA,MAAM,EAAEb,QAAQ,CAACkB,IAAI,CAACjB,EAAN,CAA5B;AAAuC,QAAA,SAAS,EAAEC,WAAW,CAACgB,IAAI,CAACjB,EAAN,EAASY,CAAT,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,IAAI,CAACC,IADR,CADF,CADF,CADD,CADH,CADF;AAaD;AACF;AACF,CAjCD;;AAkCA,eAAgBvB,oBAAhB","sourcesContent":["import React, { useState } from \"react\";\nimport \"./toolbar.css\";\nimport ToolbarData from \"./toolbar.json\";\n\nconst ResponsiveNavbarView = (props) => {\n  const [value, setValue] = useState(0);\n  const isActive = (props) => (id) => {\n    return value === id;\n  };\n  const classActive = (id ,key)=>{\n    if (id === 0 || id === key){\n        return \"active\";\n    }\n    else{\n        return \"\";\n    }\n  } \n  const url = window.location.href.split(\"/\").pop();\n  const vals = Object.keys(ToolbarData);\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === url) {\n      const list = vals[i];\n      return (\n        <div className=\"toolbar\">\n          {Object.values(ToolbarData[list]).map((item, i) => (\n            <div className=\"toolbarItems\" >\n              <ul >\n                <li key={i} active={isActive(item.id)} className={classActive(item.id,i)}>\n                  {item.name}\n                </li>\n              </ul>\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n};\nexport default  ResponsiveNavbarView;\n"]},"metadata":{},"sourceType":"module"}